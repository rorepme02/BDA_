{"cells":[{"cell_type":"markdown","metadata":{"id":"r8V4YlBfF_Iy"},"source":["# 데이터분석기초 10주차"],"id":"r8V4YlBfF_Iy"},{"cell_type":"markdown","metadata":{"id":"9fd0e709"},"source":["# 1.관련 패키지 설치하기"],"id":"9fd0e709"},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1684418738228,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"28469622"},"outputs":[],"source":["import locale\n","locale.getpreferredencoding = lambda: \"UTF-8\""],"id":"28469622"},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"981ed0de","executionInfo":{"status":"ok","timestamp":1684418796852,"user_tz":-540,"elapsed":45837,"user":{"displayName":"이재황","userId":"12813301101433897845"}},"outputId":"e5144df5-4f07-4c71-ebc4-1510d48f26af"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting kiwipiepy\n","  Downloading kiwipiepy-0.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.5/2.5 MB\u001b[0m \u001b[31m47.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting dataclasses (from kiwipiepy)\n","  Downloading dataclasses-0.6-py3-none-any.whl (14 kB)\n","Collecting kiwipiepy-model~=0.15 (from kiwipiepy)\n","  Downloading kiwipiepy_model-0.15.0.tar.gz (30.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.5/30.5 MB\u001b[0m \u001b[31m47.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (1.22.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kiwipiepy) (4.65.0)\n","Building wheels for collected packages: kiwipiepy-model\n","  Building wheel for kiwipiepy-model (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for kiwipiepy-model: filename=kiwipiepy_model-0.15.0-py3-none-any.whl size=30602629 sha256=ffd1b2679f5ee1fa7f3f2147f7c887e258b89baa60eabea3bdb0d05c0f12994f\n","  Stored in directory: /root/.cache/pip/wheels/f3/55/41/ca474338ece1bc4314b01445f64ff002d71e19df45575a16e2\n","Successfully built kiwipiepy-model\n","Installing collected packages: kiwipiepy-model, dataclasses, kiwipiepy\n","Successfully installed dataclasses-0.6 kiwipiepy-0.15.1 kiwipiepy-model-0.15.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["dataclasses"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.10/dist-packages (0.12.2)\n","Requirement already satisfied: numpy!=1.24.0,>=1.17 in /usr/local/lib/python3.10/dist-packages (from seaborn) (1.22.4)\n","Requirement already satisfied: pandas>=0.25 in /usr/local/lib/python3.10/dist-packages (from seaborn) (1.5.3)\n","Requirement already satisfied: matplotlib!=3.6.1,>=3.1 in /usr/local/lib/python3.10/dist-packages (from seaborn) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib!=3.6.1,>=3.1->seaborn) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25->seaborn) (2022.7.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.1->seaborn) (1.16.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (23.1)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: wordcloud in /usr/local/lib/python3.10/dist-packages (1.8.2.2)\n","Requirement already satisfied: numpy>=1.6.1 in /usr/local/lib/python3.10/dist-packages (from wordcloud) (1.22.4)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from wordcloud) (8.4.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from wordcloud) (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (23.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->wordcloud) (1.16.0)\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.10/dist-packages (8.4.0)\n","Collecting Pillow\n","  Downloading Pillow-9.5.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.4/3.4 MB\u001b[0m \u001b[31m71.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: Pillow\n","  Attempting uninstall: Pillow\n","    Found existing installation: Pillow 8.4.0\n","    Uninstalling Pillow-8.4.0:\n","      Successfully uninstalled Pillow-8.4.0\n","Successfully installed Pillow-9.5.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["PIL"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.22.4)\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following NEW packages will be installed:\n","  fonts-nanum\n","0 upgraded, 1 newly installed, 0 to remove and 24 not upgraded.\n","Need to get 9,599 kB of archives.\n","After this operation, 29.6 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 fonts-nanum all 20180306-3 [9,599 kB]\n","Fetched 9,599 kB in 0s (54.3 MB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 122531 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20180306-3_all.deb ...\n","Unpacking fonts-nanum (20180306-3) ...\n","Setting up fonts-nanum (20180306-3) ...\n","Processing triggers for fontconfig (2.13.1-2ubuntu3) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 10 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/usr/share/fonts/truetype: skipping, looped directory detected\n","/usr/share/fonts/truetype/humor-sans: skipping, looped directory detected\n","/usr/share/fonts/truetype/liberation: skipping, looped directory detected\n","/usr/share/fonts/truetype/nanum: skipping, looped directory detected\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}],"source":["!pip install kiwipiepy\n","!pip install pandas\n","!pip install seaborn\n","!pip install matplotlib\n","!pip install wordcloud\n","!pip install Pillow --upgrade\n","!pip install numpy\n","!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf"],"id":"981ed0de"},{"cell_type":"markdown","metadata":{"id":"phUIkQCVIGqP"},"source":["### 런타임 다시 시작"],"id":"phUIkQCVIGqP"},{"cell_type":"markdown","metadata":{"id":"83d18dfd"},"source":["# 2.데이터 불러오고 정제하기"],"id":"83d18dfd"},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27410,"status":"ok","timestamp":1684418833398,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"pd3kFQIoEHCX","outputId":"fe6a87a8-8265-4f0b-d5bf-f8d9f77b8dc6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["\n","from google.colab import drive\n","drive.mount('/content/drive')"],"id":"pd3kFQIoEHCX"},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":397,"status":"ok","timestamp":1684419019184,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"7211070c","outputId":"3e07cd2b-21af-4b04-e610-ff8455e6bec2"},"outputs":[{"output_type":"stream","name":"stdout","text":[",Year,Elements,ConservationIssues,AnalysisConclusion\n","0,\"Factors affecting the property in 2021*\n","\",##Civil unrest##Erosion and siltation/ deposition##Illegal activities##Management systems/ management plan##Other Threats:## Inclination of the Minaret####,\"Conservation issues presented to the World Heritage Committee in 2021On 30 January 2020, the State Party submitted a state of conservation report, which is available at https://whc.unesco.org/document/171732 and provides information on the implementation of the corrective measures and other elements as follows:At the end of May 2019, after heavy flooding in the area around the minaret, a mission was carried out by a joint group of national experts with the purpose of assessing the status of the property and its surroundings. The mission reported that parts of the retaining wall on the bank of Jam Rud river had been washed away and the riverbeds of the Jam Rud and Hari Rud rivers were filled with sediment. The mission noted the need for\n"]}],"source":["thieves = open('drive/My Drive/mydrive2/dangerHeritageFinalData_3조.csv', encoding='UTF-8').read()\n","print(thieves[:1000])"],"id":"7211070c"},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1684419024449,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"fad5d5ae","outputId":"5f32eb50-edfd-4634-d782-d9cd687f72ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["ear lements onservation ssues nalysis onclusion actors affecting the property in ivil unrest rosion and siltation deposition llegal activities anagement systems management plan ther hreats nclination of the inaret onservation issues presented to the orld eritage ommittee in n anuary the tate arty submitted a state of conservation report which is available at https whc unesco org document and provides information on the implementation of the corrective measures and other elements as follows t the end of ay after heavy flooding in the area around the minaret a mission was carried out by a joint group of national experts with the purpose of assessing the status of the property and its surroundings he mission reported that parts of the retaining wall on the bank of am ud river had been washed away and the riverbeds of the am ud and ari ud rivers were filled with sediment he mission noted the need for emergency cleaning and reconstruction of the damaged parts of the retaining wall ollowing \n"]}],"source":["import re\n","thieves = re.sub('[^a-z]', ' ', thieves)\n","thieves = re.sub('[\\s]+', ' ', thieves)\n","thieves = thieves.strip()\n","print(thieves[:1000])"],"id":"fad5d5ae"},{"cell_type":"markdown","metadata":{"id":"b29f4ee8"},"source":["# 3.형태소 분석하기"],"id":"b29f4ee8"},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1684419031495,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"74f1f6c2","outputId":"f29629ce-cf02-4baf-89d8-09f4d57ae23a"},"outputs":[{"output_type":"stream","name":"stdout","text":["['ear/SL', 'lements/SL', 'onservation/SL', 'ssues/SL', 'nalysis/SL', 'onclusion/SL', 'actors/SL', 'affecting/SL', 'the/SL', 'property/SL']\n"]}],"source":["#\n","from kiwipiepy import Kiwi\n","\n","kiwi = Kiwi()\n","posTagout = kiwi.tokenize(thieves)\n","sentencePOS = []\n","for eachOut in posTagout:\n","    result = eachOut[0]+\"/\"+eachOut[1]\n","    sentencePOS.append(result)\n","print(sentencePOS[:10])"],"id":"74f1f6c2"},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":612,"status":"ok","timestamp":1684419034887,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"e61a0f58","outputId":"cf59c28f-39c7-434c-c5d3-a212d395cd06"},"outputs":[{"output_type":"stream","name":"stdout","text":["             word\n","0          ear/SL\n","1      lements/SL\n","2  onservation/SL\n","3        ssues/SL\n","4      nalysis/SL\n","5    onclusion/SL\n","6       actors/SL\n","7    affecting/SL\n","8          the/SL\n","9     property/SL\n"]}],"source":["#\n","import pandas as pd\n","df_words = pd.DataFrame({'word':sentencePOS})\n","print(df_words[:10])"],"id":"e61a0f58"},{"cell_type":"markdown","metadata":{"id":"77825d4b"},"source":["# 4.단어 빈도표 만들기"],"id":"77825d4b"},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1684419039347,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"7c2c5c02","outputId":"b4468734-44e6-417d-95a6-a2596c10e009"},"outputs":[{"output_type":"stream","name":"stdout","text":["             word  count\n","0          ear/SL      6\n","1      lements/SL     10\n","2  onservation/SL     14\n","3        ssues/SL      8\n","4      nalysis/SL     10\n","5    onclusion/SL     12\n","6       actors/SL      9\n","7    affecting/SL     12\n","8          the/SL      6\n","9     property/SL     11\n"]}],"source":["#\n","df_words['count'] = df_words['word'].str.len()\n","print(df_words[:10])"],"id":"7c2c5c02"},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1684419042004,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"07ed0620","outputId":"f773265f-5cd0-481a-e150-8660d4b79317"},"outputs":[{"output_type":"stream","name":"stdout","text":["       word  count\n","8236   o/SL      4\n","1092   o/SL      4\n","2655   a/SL      4\n","4514   n/SL      4\n","1855   s/SL      4\n","8222   o/SL      4\n","3559   a/SL      4\n","7808   y/SL      4\n","10806  a/SL      4\n","10360  d/SL      4\n"]}],"source":["#\n","df_words = df_words.query('count >= 2')\n","print(df_words.sort_values('count')[:10])"],"id":"07ed0620"},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":560,"status":"ok","timestamp":1684419048206,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"49da3b6b","outputId":"58285250-b9d4-4953-a7e7-53ad51519fda"},"outputs":[{"output_type":"stream","name":"stdout","text":["             word     n\n","1300       the/SL  1206\n","869         of/SL   622\n","89         and/SL   383\n","1319        to/SL   310\n","648         in/SL   276\n","517        for/SL   175\n","0            a/SL   172\n","445    eritage/SL   122\n","914       orld/SL   120\n","1007  property/SL   118\n"]}],"source":["#\n","df_words = df_words.groupby('word', as_index = False)\n","#\n","df_words = df_words.agg(n=('word', 'count'))\n","#\n","df_words = df_words.sort_values('n', ascending = False)\n","print(df_words[:10])"],"id":"49da3b6b"},{"cell_type":"markdown","metadata":{"id":"818816ab"},"source":["# 5.상위 30개의 단어 추출해서 막대 그래프로 표현하기"],"id":"818816ab"},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":376,"status":"ok","timestamp":1684419057117,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"2db7c114","outputId":"91fc9ef0-1fc5-49a5-9642-143dc313b3f9"},"outputs":[{"output_type":"stream","name":"stdout","text":["                 word     n\n","1300           the/SL  1206\n","869             of/SL   622\n","89             and/SL   383\n","1319            to/SL   310\n","648             in/SL   276\n","517            for/SL   175\n","0                a/SL   172\n","445        eritage/SL   122\n","914           orld/SL   120\n","1007      property/SL   118\n","880             on/SL   111\n","186             by/SL   107\n","242   conservation/SL   105\n","123             as/SL    94\n","572             he/SL    93\n","652         inaret/SL    82\n","1284          tate/SL    76\n","122           arty/SL    76\n","81              am/SL    69\n","1433          with/SL    64\n","1299          that/SL    63\n","877       ommittee/SL    62\n","705             is/SL    62\n","156             be/SL    58\n","429          entre/SL    57\n","531           from/SL    55\n","1438          work/SL    53\n","954           plan/SL    49\n","783       measures/SL    47\n","1418           was/SL    44\n"]}],"source":["#\n","top30 = df_words.head(30)\n","print(top30)"],"id":"2db7c114"},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3253,"status":"ok","timestamp":1684419068874,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"bb8275e5","outputId":"c00bd018-5132-49f9-f004-65c17043192e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='n', ylabel='word'>"]},"metadata":{},"execution_count":17},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n","WARNING:matplotlib.font_manager:findfont: Font family 'NanumBarunGothic' not found.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 780x720 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","plt.rcParams.update({'font.family':'NanumBarunGothic'})\n","plt.rcParams.update({'figure.dpi':'120'})\n","plt.rcParams.update({'figure.figsize':[6.5,6]})\n","\n","sns.barplot(data = top30, y = 'word', x = 'n')"],"id":"bb8275e5"},{"cell_type":"markdown","metadata":{"id":"aea2ad58"},"source":["# 6.워드클라우드 생성하기"],"id":"aea2ad58"},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1684419071531,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"3d9eb37b","outputId":"7dd21b58-6c52-412b-fdd9-c1f3f69a5541"},"outputs":[{"output_type":"stream","name":"stdout","text":["the/SL : 1206\n","of/SL : 622\n","and/SL : 383\n","to/SL : 310\n","in/SL : 276\n","for/SL : 175\n","a/SL : 172\n","eritage/SL : 122\n","orld/SL : 120\n","property/SL : 118\n","on/SL : 111\n","by/SL : 107\n","conservation/SL : 105\n","as/SL : 94\n","he/SL : 93\n"]}],"source":["#\n","df_words_dic = df_words.set_index('word').to_dict()['n']\n","\n","dictNum = 0\n","for key, value in df_words_dic.items():\n","    print(key, \":\", value)\n","    dictNum += 1\n","    if dictNum == 15:\n","      break"],"id":"3d9eb37b"},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"executionInfo":{"elapsed":1351,"status":"error","timestamp":1684419075626,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"4a1988ec","outputId":"8c67e13e-4692-427d-df42-22732429bb92"},"outputs":[{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-4865ef68bd23>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mwordcloud\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mWordCloud\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/wordcloud/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m from .wordcloud import (WordCloud, STOPWORDS, random_color_func,\n\u001b[0m\u001b[1;32m      2\u001b[0m                         get_single_color_func)\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mcolor_from_image\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageColorGenerator\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m __all__ = ['WordCloud', 'STOPWORDS', 'random_color_func',\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/wordcloud/wordcloud.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageDraw\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageFilter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageFont\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mquery_integral_image\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mquery_integral_image\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/PIL/ImageFont.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     36\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0m_deprecate\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdeprecate\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0m_util\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mis_directory\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_path\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'is_directory' from 'PIL._util' (/usr/local/lib/python3.10/dist-packages/PIL/_util.py)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["from wordcloud import WordCloud\n","from PIL import Image \n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","font = 'drive/My Drive/mydrive2/DoHyeon-Regular.ttf'\n","word_cloud = WordCloud(font_path = font,\n","                       width = 2000, height = 1000,\n","                       background_color='white')\n","\n","word_cloud.generate_from_frequencies(df_words_dic)\n","\n","plt.figure(figsize=(15,15))\n","plt.imshow(word_cloud)\n","plt.axis(\"off\")\n","plt.tight_layout(pad=0)\n","plt.show()"],"id":"4a1988ec"},{"cell_type":"markdown","metadata":{"id":"g1Z62vUGJDHZ"},"source":["# 7.명사 & 형용사 & 동사 (content words)만 사용하기"],"id":"g1Z62vUGJDHZ"},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4172,"status":"ok","timestamp":1684419230522,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"69e94a82","outputId":"f25c81bd-5516-4bee-f6fd-7501194db9bf"},"outputs":[{"output_type":"stream","name":"stdout","text":["[]\n"]}],"source":["from kiwipiepy import Kiwi\n","#\n","kiwi = Kiwi()\n","posTagout = kiwi.tokenize(thieves)\n","sentencePOS = []\n","for eachOut in posTagout:\n","    if \"VV\" in eachOut[1] or \"VA\" in eachOut[1] or \"NN\" in eachOut[1]:\n","      result = eachOut[0]+\"/\"+eachOut[1]\n","      sentencePOS.append(result)\n","print(sentencePOS[:10])"],"id":"69e94a82"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":385,"status":"ok","timestamp":1684414403437,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"Bd4YPiPOJ18T","outputId":"89ba7788-c328-4181-99ad-52d85e22f78c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Empty DataFrame\n","Columns: [word]\n","Index: []\n"]}],"source":["#\n","import pandas as pd\n","df_words = pd.DataFrame({'word':sentencePOS})\n","print(df_words[:10])"],"id":"Bd4YPiPOJ18T"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"executionInfo":{"elapsed":408,"status":"error","timestamp":1684414406017,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"x8qVZf7KJ53S","outputId":"1f274eff-6474-47b6-bde9-9b17c2a33635"},"outputs":[{"ename":"AttributeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-179-ede30a037bb2>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdf_words\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'count'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_words\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'word'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mdf_words\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_words\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mquery\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'count >= 2'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, name)\u001b[0m\n\u001b[1;32m   5900\u001b[0m         ):\n\u001b[1;32m   5901\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5902\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mobject\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__getattribute__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5903\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5904\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setattr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/accessor.py\u001b[0m in \u001b[0;36m__get__\u001b[0;34m(self, obj, cls)\u001b[0m\n\u001b[1;32m    180\u001b[0m             \u001b[0;31m# we're accessing the attribute of the class, i.e., Dataset.geo\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    181\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 182\u001b[0;31m         \u001b[0maccessor_obj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_accessor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    183\u001b[0m         \u001b[0;31m# Replace the property with the accessor object. Inspired by:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    184\u001b[0m         \u001b[0;31m# https://www.pydanny.com/cached-property.html\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/strings/accessor.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data)\u001b[0m\n\u001b[1;32m    179\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstring_\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mStringDtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 181\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_inferred_dtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    182\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_categorical\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mis_categorical_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    183\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_string\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mStringDtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/strings/accessor.py\u001b[0m in \u001b[0;36m_validate\u001b[0;34m(data)\u001b[0m\n\u001b[1;32m    233\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minferred_dtype\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mallowed_types\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 235\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Can only use .str accessor with string values!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    236\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minferred_dtype\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    237\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: Can only use .str accessor with string values!"]}],"source":["# \n","df_words['count'] = df_words['word'].str.len()\n","\n","#\n","df_words = df_words.query('count >= 2')\n","\n","#\n","df_words = df_words.groupby('word', as_index = False)\n","#\n","df_words = df_words.agg(n=('word', 'count'))\n","#\n","df_words = df_words.sort_values('n', ascending = False)\n","print(df_words[:10])"],"id":"x8qVZf7KJ53S"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":414},"executionInfo":{"elapsed":242,"status":"error","timestamp":1684404879299,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"9hMCxynLKAh4","outputId":"45cc71c4-d26f-4899-f63c-82ec1d6b9006"},"outputs":[{"name":"stdout","output_type":"stream","text":["Empty DataFrame\n","Columns: [word]\n","Index: []\n"]},{"ename":"ValueError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-82-2531f5b54e89>\u001b[0m in \u001b[0;36m<cell line: 13>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrcParams\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'figure.figsize'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m6.5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbarplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtop30\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'word'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mbarplot\u001b[0;34m(data, x, y, hue, order, hue_order, estimator, errorbar, n_boot, units, seed, orient, color, palette, saturation, width, errcolor, errwidth, capsize, dodge, ci, ax, **kwargs)\u001b[0m\n\u001b[1;32m   2753\u001b[0m         \u001b[0mestimator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"size\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2754\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2755\u001b[0;31m     plotter = _BarPlotter(x, y, hue, data, order, hue_order,\n\u001b[0m\u001b[1;32m   2756\u001b[0m                           \u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrorbar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn_boot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0munits\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseed\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2757\u001b[0m                           \u001b[0morient\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, x, y, hue, data, order, hue_order, estimator, errorbar, n_boot, units, seed, orient, color, palette, saturation, width, errcolor, errwidth, capsize, dodge)\u001b[0m\n\u001b[1;32m   1528\u001b[0m                  errcolor, errwidth, capsize, dodge):\n\u001b[1;32m   1529\u001b[0m         \u001b[0;34m\"\"\"Initialize the plotter.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1530\u001b[0;31m         self.establish_variables(x, y, hue, data, orient,\n\u001b[0m\u001b[1;32m   1531\u001b[0m                                  order, hue_order, units)\n\u001b[1;32m   1532\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mestablish_colors\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpalette\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaturation\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/seaborn/categorical.py\u001b[0m in \u001b[0;36mestablish_variables\u001b[0;34m(self, x, y, hue, data, orient, order, hue_order, units)\u001b[0m\n\u001b[1;32m    539\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvar\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    540\u001b[0m                     \u001b[0merr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34mf\"Could not interpret input '{var}'\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 541\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    543\u001b[0m             \u001b[0;31m# Figure out the plotting orientation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Could not interpret input 'n'"]}],"source":["#\n","top30 = df_words.head(30)\n","print(top30)\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","plt.rcParams.update({'font.family':'NanumBarunGothic'})\n","\n","plt.rcParams.update({'figure.dpi':'120'})\n","plt.rcParams.update({'figure.figsize':[6.5,6]})\n","\n","sns.barplot(data = top30, y = 'word', x = 'n')"],"id":"9hMCxynLKAh4"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1037,"status":"ok","timestamp":1684412079037,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"JjZbu_i7KIwZ","outputId":"23f5775f-412d-4bbe-e9b3-a8e498858e17"},"outputs":[{"name":"stdout","output_type":"stream","text":["the/SL : 1206\n","of/SL : 622\n","and/SL : 383\n","to/SL : 310\n","in/SL : 276\n","for/SL : 175\n","a/SL : 172\n","eritage/SL : 122\n","orld/SL : 120\n","property/SL : 118\n","on/SL : 111\n","by/SL : 107\n","conservation/SL : 105\n","as/SL : 94\n","he/SL : 93\n"]}],"source":["#\n","df_words_dic = df_words.set_index('word').to_dict()['n']\n","\n","dictNum = 0\n","for key, value in df_words_dic.items():\n","    print(key, \":\", value)\n","    dictNum += 1\n","    if dictNum == 15:\n","      break"],"id":"JjZbu_i7KIwZ"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"executionInfo":{"elapsed":503,"status":"error","timestamp":1684414601878,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"RlMdRNDoKNYi","outputId":"b62d61f7-520c-4d2f-bf9b-2568eb6460eb"},"outputs":[{"ename":"ImportError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-182-fe974f36fee4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mwordcloud\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mWordCloud\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpit\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/wordcloud/__init__.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m from .wordcloud import (WordCloud, STOPWORDS, random_color_func,\n\u001b[0m\u001b[1;32m      2\u001b[0m                         get_single_color_func)\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mcolor_from_image\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageColorGenerator\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m __all__ = ['WordCloud', 'STOPWORDS', 'random_color_func',\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/wordcloud/wordcloud.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageDraw\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageFilter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mPIL\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImageFont\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mquery_integral_image\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mquery_integral_image\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/PIL/ImageFont.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     36\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImage\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0m_deprecate\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdeprecate\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0m_util\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mis_directory\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_path\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'is_directory' from 'PIL._util' (/usr/local/lib/python3.10/dist-packages/PIL/_util.py)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}],"source":["from wordcloud import WordCloud\n","from PIL import Image \n","import numpy as np\n","import matplotlib.pyplot as pit\n","\n","font = 'drive/My Drive/AJOU/2023/강의/data/DoHyeon-Regular.ttf'\n","word_cloud = WordCloud(font_path = font,\n","                       width = 2000, height = 1000,\n","                       background_color='white')\n","\n","word_cloud.generate_from_frequencies(df_words_dic)\n","\n","plt.figure(figsize=(15,15))\n","plt.imshow(word_cloud)\n","plt.axis(\"off\")\n","plt.tight_layout(pad=0)\n","plt.show()"],"id":"RlMdRNDoKNYi"},{"cell_type":"markdown","metadata":{"id":"SVtYSqzVKaHr"},"source":["# 8.워드 클라우드 모양 변경하기"],"id":"SVtYSqzVKaHr"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"executionInfo":{"elapsed":303,"status":"error","timestamp":1684412470653,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"8iVyOw2yKjSf","outputId":"1ca0dc2a-f428-4818-b044-21c8023ab97e"},"outputs":[{"ename":"FileNotFoundError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-172-104b555d7ece>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mPIL\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0micon\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPIL\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mImage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'drive/My Drive/mydrive2/cloud.png'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/PIL/Image.py\u001b[0m in \u001b[0;36mopen\u001b[0;34m(fp, mode, formats)\u001b[0m\n\u001b[1;32m   2973\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2974\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfrombuffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdecoder_name\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"raw\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2975\u001b[0;31m     \"\"\"\n\u001b[0m\u001b[1;32m   2976\u001b[0m     \u001b[0mCreates\u001b[0m \u001b[0man\u001b[0m \u001b[0mimage\u001b[0m \u001b[0mmemory\u001b[0m \u001b[0mreferencing\u001b[0m \u001b[0mpixel\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32min\u001b[0m \u001b[0ma\u001b[0m \u001b[0mbyte\u001b[0m \u001b[0mbuffer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2977\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'drive/My Drive/mydrive2/cloud.png'"]}],"source":["#\n","import PIL\n","icon = PIL.Image.open('drive/My Drive/mydrive2/cloud.png')"],"id":"8iVyOw2yKjSf"},{"cell_type":"code","execution_count":null,"metadata":{"id":"MRV7xpZhLk9Z"},"outputs":[],"source":["import numpy as np\n","img = PIL.Image.new('RGB', icon.size, (255, 255, 255))\n","img.paste(icon, icon)\n","img = np.array(img)"],"id":"MRV7xpZhLk9Z"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"elapsed":293,"status":"error","timestamp":1684412387504,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"KDtt0N4OL6zV","outputId":"191038a9-a4c5-49eb-fc35-78a4e63b543f"},"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-168-d32fb41e47e6>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m word_cloud = WordCloud(random_state = 1234,\n\u001b[0m\u001b[1;32m      3\u001b[0m                        \u001b[0mfont_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfont\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                        \u001b[0mwidth\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheight\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m700\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m                        \u001b[0mbackground_color\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'white'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'WordCloud' is not defined"]}],"source":["#\n","word_cloud = WordCloud(random_state = 1234,\n","                       font_path = font,\n","                       width = 1000, height = 700,\n","                       background_color='white',\n","                       mask = img)\n","\n","img_word_cloud = word_cloud.generate_from_frequencies(df_words_dic)\n","\n","plt.figure(figsize=(15,15))\n","plt.imshow(img_word_cloud)\n","plt.axis(\"off\")\n","plt.tight_layout(pad=0)\n","plt.show()"],"id":"KDtt0N4OL6zV"},{"cell_type":"markdown","metadata":{"id":"8lvpGlDGMpvU"},"source":["# 9.용어 색인 테이블(concordance table) 사용하여 문맥 확인하기"],"id":"8lvpGlDGMpvU"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":245},"executionInfo":{"elapsed":1250,"status":"error","timestamp":1684412066443,"user":{"displayName":"이재황","userId":"12813301101433897845"},"user_tz":-540},"id":"z4X7IpO1M4eD","outputId":"d0717384-f6be-456b-934e-e0d70590d388"},"outputs":[{"ename":"FileNotFoundError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-149-10442bee074c>\u001b[0m in \u001b[0;36m<cell line: 7>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0msentences\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkiwi\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit_into_sents\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mthieves\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0moutput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"drive/My Drive/AJOU/2023/강의/data/posSplitedReview.txt\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'w'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'utf-8'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0msentencesText\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'drive/My Drive/AJOU/2023/강의/data/posSplitedReview.txt'"]}],"source":["#\n","from kiwipiepy import Kiwi\n","\n","kiwi = Kiwi()\n","\n","sentences = kiwi.split_into_sents(thieves)\n","output = open(\"drive/My Drive/AJOU/2023/강의/data/posSplitedReview.txt\", 'w', encoding='utf-8')\n","\n","sentencesText = \"\"\n","for sentence in sentences:\n","\n","  #\n","  eachPOSSentence = \"\"\n","  posTagout = kiwi.tokenize(sentence.text)\n","  for eachOut in posTagout:\n","    eachPOSSentence = eachPOSSentence + \" \" + eachOut[0]\n","\n","  output.write(eachPOSSentence + \"\\n\")\n","\n","  sentencesText = sentencesText + \"\\n\" + eachPOSSentence\n","print(sentencesText[:100])\n","output.close()"],"id":"z4X7IpO1M4eD"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5725,"status":"ok","timestamp":1683694792710,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"jcFbFhJuOHaI","outputId":"a4deba16-9dc3-4e89-98c7-d7c0146e4c3a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.8.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk) (8.1.3)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from nltk) (1.2.0)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk) (2022.10.31)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from nltk) (4.65.0)\n"]}],"source":["!pip install nltk"],"id":"jcFbFhJuOHaI"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1669,"status":"ok","timestamp":1683694823979,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"eP5DKNYuOiuw","outputId":"1b3abede-a8af-4e40-d4e3-43661e1d5637"},"outputs":[{"name":"stdout","output_type":"stream","text":["Displaying 25 of 140 matches:\n"," 은 아니 ᆷ 도둑들 짜히 었 어요 특히 잠파노 완전 멋있 었 어요 전지현 과 의 키스 신 완전 짱 잘 만드 ᆫ 영화 가 꼭 흥행 하 는 것 \n"," 액션 씬 들 은 한국 영화 도 많이 발전 하 었 다고 느끼 었 다 전지현 예쁘 었 음 근데 마지막 에 김수현 은 어 하 게 되 ᆫ 거 이 지\n","이 별로 없 고 출연진 으로 떼 어 우려 하 었 던 느낌 이 막 남 전지현 언니 완전 짱 와이퍼 달 고 날 는 모습 쩌러 완전 같 은 여자 이\n","화 로 는 만점 예술 점수 로 는 빵점 이 아니 ᆯ까 진짜 별로 다 전지현 몸매 는 최고 이 다 나 ᆫ 재밋엇 음 만 찍 은 것 이 이해 가 \n"," 보 는 맛 이 잇 네요 전지 현 세월 이 지나 어도 우월 하 더라 전지현 이 이 영화 살리 었 다 캐스팅 기대치 가 너무 높 어 살짝 실망 \n","들 도 잘 하 시 고 ᆼ 잼 나 었었 어요 잘 만드 ᆫ 영화 이 ᆷ 전지현 연기 잘 하 듯 너무 크 ᆫ 기대 는 실망 을 부르 ᆫ다 만 정도 \n"," 다 재미있 다 한국 영화 흥하 어라 이만 하 ᆫ 오락 영화 없 음 전지현 때문 에 보 었 다 능 오션스 일레븐 에 비하 어 전반부 훔치 는 \n","량감 넘치 는 작품 탄탄 하 ᆫ 구성력 빠르 ᆫ 전개 가 좋 었 다 전지현 이나 여배우들 의 연기 도 좋 었 고 이정재 멋있 던데 요 김윤식 \n","느 것 보다 는 그냥 즐기 ᆯ 수 있 는 영화 이 ᆫ 것 같 다 걍 전지현 영화 만 관객 돌파 이 니 초 호화 캐스팅 이 니 말 이 많 어서 \n","하 니 너무 어수선 하 ᆫ 느낌 나 의 인생 최악 이 었 다 어쨌든 전지현 은 살아남 었 다 영화 를 보 ᆫ 주변 사람 들 은 하나같이 다 전\n","현 은 살아남 었 다 영화 를 보 ᆫ 주변 사람 들 은 하나같이 다 전지현 짱 이 라고 하 니 뭐 영화 는 킬링타임 용 오락 영화 로 는 좋 \n","기 위하 어서 보 었 던 영화 이 ᆫ데 아쉽 은 점 이 좀 있 네요 전지현 씨 가 꽤 많 은 씬 에 나오 는데 빠르 ᆫ 대사 처리 가 영화 감\n","도 구매 하 ᆯ 듯 이렇 은 오락 영화 좋 어 하 니깐 점 주 는데 전지현 땜 에 점 더 주 ᆫ다 재미있 고 없 고 를 떠나 어서 솔직히 기록\n"," 게 보 었 네요 개인 적 으로 오션스 시리즈 보다 는 재밌 었 음 전지현 은 어떻 게 늙 지 도 않 는지 우와 감탄 소문나 ᆫ 집 에 풍성 \n","이 없 지 않 어 있 었 지만 괜찮 게 보 었 다 추천 하 는 영화 전지현 의 재 발견 완젼 쵝오 뭐 이 ᆫ가 영화 안 에서 는 박진감 넘치 \n","요 액션 이 특히 마음 에 들 어요 배우 보 는 재미 가 쏠쏠 역시 전지현 영화 를 보 시 ᆫ 분 들 은 알 겠 지만 미션 임파서블 오션스일레\n","아니 ᆸ니다 조금 유치 하 다는 생각 이 중간 중간 들 어서 하지만 전지현 때문 에 나오 ᆯ 때 기분 좋 었 던 영화 이 었 습니다 전지현 씨\n","만 전지현 때문 에 나오 ᆯ 때 기분 좋 었 던 영화 이 었 습니다 전지현 씨 너무 너무 매력 있 었 어요 깜짝 놀라 었 음 어디 를 주목 하\n","가 ᆫ 일행 도 그렇 고 대 부분 사람 들 이 재미없 다고 하 네요 전지현 씨 코믹 연기 너무 인상 깊 었 어요 신하균 씨 의 깨알 까메오 도\n"," 대박 어서 괴물 을 따라잡 어라 굳이 이 ᆸ니다 진심 대박 이정재 전지현 진짜 짱 에 요 반전 두 잇 구 쉬 ᆯ 틈 없 는 전개 짱 흥미진진\n"," 음 의외로 잼 던데 최 감독 특유 의 반전 에 반전 잘 보 엇 음 전지현 왜케이쁘냐 김수현 대 박 많이 재미있 고 연기자 들 영화 잘 찍 으\n","팔 는 천박 하 ᆫ 영화 글 쟁이 들 오랜만 에 괜찮 은 한국 영화 전지현 아직 살 어 있 구나 실망 재미없 었 음 기대 보다 훨씬 좋 었 음\n","그 이외 에 나머지 가 괜찮 었 다 재밌 다 그냥 재밌 다 이쁘 다 전지현 그냥 이쁘 다 남기 어 주 ᆫ 영화 배우 들 덕 에 눈 정화 가 줄\n","방금 보 고 나오 엇 는데 내용 은 그냥 허접 스토리 도 허접 사실 전지현 안 좋아하 는데 보 는 내내 전지현 몸매 의상 외모 만 보이 더라 \n","그냥 허접 스토리 도 허접 사실 전지현 안 좋아하 는데 보 는 내내 전지현 몸매 의상 외모 만 보이 더라 전지현 이 최고 의 수혜자 이 ᆫ 듯\n"]}],"source":["from nltk import *\n","retokenize = RegexpTokenizer(\"[\\w]+\")\n","text = Text(retokenize.tokenize(sentencesText))\n","text.concordance(\"전지현\")"],"id":"eP5DKNYuOiuw"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":426,"status":"ok","timestamp":1683694850580,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"Uyu-jU_WWUzJ","outputId":"f34ffc5b-d325-4da6-d274-6b1dc1300022"},"outputs":[{"name":"stdout","output_type":"stream","text":["Displaying 25 of 39 matches:\n"," 발전 하 었 다고 느끼 었 다 전지현 예쁘 었 음 근데 마지막 에 김수현 은 어 하 게 되 ᆫ 거 이 지 우리 나라 도둑 들 은 손 보다 총\n","객 의 사랑 을 받 기 에 ᆫ 부족 하 ᆫ 영화 도둑들 잼써용 근데 김수현 이 조금 나오 어요 ᆼ 나 수현 이 오빠 보 러 가 ᆫ 거 엿 는데\n"," 이 라기 보다 ᆫ 복수 액션 활극 재밌 었 다 홍보 하 ᆯ 때 는 김수현 의 비중 도 높 은 것 처럼 하 어 놓 고는 젠장 낚이 었 다 그렇\n","불과 몇 만 명 안 남 었 지만 계속 가 ᆯ지 내리 ᆯ지 궁금하 ᆷ 김수현 왜 이렇 게 안 나오 냐 안 나오 냐 하 시 는데 이것 이 하 어 \n"," 남 들 보 니 어쩌 ᆯ 수 없이 보 엇 다는 영화 완전 재미있 어 김수현 대 박 멋있 어 헤헤 참 잼 나 는 영화 오랜만 에 잼 나 게 보 \n"," 싶 다 이런 영화 가 천만 이 라니 오션 일레븐 에 짝뚱 짜릿짜릿 김수현 저 정도 캐스팅 에 천만 못 하 면 그것 도 굴욕 이 겠 지 재미없\n","우 들 연기력 이 진짜 깊이 빠지 어서 시간 가 는 줄 모르 고 봄 김수현 이 조연 하 ᆯ 만 하 ᆷ 맨 마지막 반전 감탄 을 자아내 는 영화\n","액션 스토리 도 왜 이렇 게 눈 에 보이 는지 그리고 존재감 없 는 김수현 이 안타깝 다 짝퉁 필 이 다분 하 었 지만 그렇 어도 액션 이나 \n","면 창피 하 다 다크나이트라이즈 한 번 더 보 는 것 이 낫 겟 다 김수현 뜨 기 도 전 에 찍 은 거 이 ᆫ데 김수현 깔 는 사람 들 은 뭐\n"," 는 것 이 낫 겟 다 김수현 뜨 기 도 전 에 찍 은 거 이 ᆫ데 김수현 깔 는 사람 들 은 뭐 이 지 멍청하 어 배우 들 캐스팅 부터 남다\n"," 들 캐스팅 부터 남다르 다 하 었 더니 역시 나가 어 역시 나 굿 김수현 분량 이 작 어서 아쉽 었 지만 정말 재밌 게 보 었 다 스토리 점\n","었 다 스토리 점 배우 들 의 열연 깨알 대사 점 후반부 지루함 점 김수현 실종 점 어라 저 ᆫ 재미있 던데 요 하지만 확실히 너무 기대감 이\n","데 최 감독 특유 의 반전 에 반전 잘 보 엇 음 전지현 왜케이쁘냐 김수현 대 박 많이 재미있 고 연기자 들 영화 잘 찍 으시 었 네요 못 보\n","나 의 생 에 최고 의 영화 엔딩 이 이상 하 고 묻히 어 버리 ᆫ 김수현 딱히 초점 없 는 플롯 부족 하 ᆫ 동기 단순히 배우 에 의존 하 \n","다 정말 재미있 게 보 었 음 그냥 무난 하 ᆫ 영화 재밌 음 근데 김수현 은 왜 나오 ᆫ 거 이 지 전지현 쩔어 별 한 개 더 아깝 음 영화\n","ᆫ 덜 매력 적 이 기 ᆫ 하 었 다 도둑 들 짱 재미있 었 다 ᆼ 김수현 나오 ᆫ 분량 은 없 었 지만 키스 신 대 박 완전 잼 있 어 ᆼ \n"," 고 조금 의 감동 도 모두 해피앤딩 이 였 으면 더 좋 었 을 듯 김수현 넘 불쌍 하 어 지못미 못 보 시 ᆫ 분 기분 울 쩍 하 시 ᆫ 분\n","진짜 알맹이 가 뭐 이 ᆫ지 찾 을 수 가 없 네 전지현 과 김혜수 김수현 등 의 배우 는 볼거리 를 제공 하 었 지만 스토리 는 딱히 없 는\n","적 으로 정말 재밌 는 지 는 잘 진심 심야 영화 로 밧 는데 완전 김수현 스릉흔 이 다 여름철 보 ᆯ 만 하 ᆫ 영화 오션즈 일레븐 을 보 \n"," 빠르 ᆫ 스토리 전개 에 볼거리 딱 맞 는 조연 오달수 에 비쥬얼 김수현 찌질 한 이정재 김윤석 이야 뭐 여주인공 이 김혜수 야 전지현 이 \n","하 ᆫ다 그리고 디아이 의 그녀 를 보 게 되 어 더욱 즐겁 었 다 김수현 사랑 스럽 다 출연진 에 비하 어 졸작 체 ᆫ 마지막 에 너무 멋지\n"," 는 아쉬움 이 홍콩 연관 대 에 나오 어 나름 신선 도둑들 개죠아 김수현 사랑 하 어 그냥저냥 에 등급 도 안 맞 는 거 같 은데 이것 이 \n"," 기 ᆫ 하 었 지만 그래도 꽤재밋던 영화 그래도 나 한테 는 역시 김수현 파워 나 ᆫ 재밌 게 보 었 음 다만 부족 하 ᆫ 느낌 그래도 재밌\n","션 국산 오락 영화 치 고 좋 음 원 안 아깝 은 영화 잼 있 으나 김수현 의 분량 이 짧 고 거의 모든 거 ᆯ 전지현 이 하 었 다는 거 김\n"," 근데 진심 번 보 ᆯ 거 는 못 되 는 그냥 전지현 이 갑 이 고 김수현 은 분량 조금 이 ᆫ데 임팩트 쩜 우리 나라 영화 가 많이 발전 하\n"]}],"source":["text.concordance(\"김수현\")"],"id":"Uyu-jU_WWUzJ"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":362,"status":"ok","timestamp":1683694855892,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"grpOuAk8PC2x","outputId":"27e1990e-f70e-4729-b79d-125a8611013f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Displaying 25 of 137 matches:\n","하 고 점 에서 점 사이 이 다 이것 이 흥행 하 ᆫ 이유 는 백퍼 배우 빨 ᆯ 돈 주 고 보 기 아깝 은 영화 나 ᆫ 엄청 재밌 었 는데 \n","알 을 다 피하 게 연출 하 냐 연출력 이 에러 다 웃 자고 보 고 배우 보 려고 보 ᆫ다 최동훈 최악 의 영화 범죄 의 재 구성 의 발밑 \n"," ᆯ 따름 진짜 별로 재미 도 없 고 해외 로케 에 어마어마 하 ᆫ 배우 들 출연 하 ᆫ 것 에 비하 어 스토리 도 없 고 무어 이 ᆫ가 다\n"," 더킹 투하즈 에서 도 를 기관총 이 라 하 고 오락 영화 로 무난 배우 들 연기 는 좋 어요 캐스팅 도 좋 고 근데 스토리 가 더 짱짱 하\n","하 엇 음 더 좋 었 을 터 이 ᆫ데 아쉽 다 이것 이 영화 이 다 배우 보 는 맛 이 잇 네요 전지 현 세월 이 지나 어도 우월 하 더라 \n","생각 보다 재미있 었 으며 무엇 보다 스크린 에 잘 나오 지 않 던 배우 들 이 방가웠다 배우 들 연기 도 뛰어나 고 재미 잇 엇 다 액션 \n","으며 무엇 보다 스크린 에 잘 나오 지 않 던 배우 들 이 방가웠다 배우 들 연기 도 뛰어나 고 재미 잇 엇 다 액션 연기 가 정말 일품 이\n","이 천만 이 냐 천만 영화 의 불 명예 타임 킬링 용 으로 아주 굿 배우 들 의 특색 이 돋보이 었 던 영화 더 그레이 같 은 영화 보다 이\n","었 으니 점 나 ᆫ 개인 적 으로 전 지연 이 너무 너무 좋 었 음 배우 한 명 한 명 캐스팅 도 너무 잘 하 ᆫ 거 같 고 완전 재밌 게 \n","만하 ᆫ 영화 도 별로 없 더라구요 시간 때우 기 좋 은 팝콘 무비 배우 들 보 느라 지루 하 ᆯ 틈 은 없 네요 재미있 었 어요 살짝 엉성\n"," 엉성 하 ᆫ 것 이 있 었 으나 그렇 케 튀 ᆯ 정도 도 아니 고 배우 들 연기 잘 하 고 무엇 보다 그냥 아무 생각 없이 재미있 게 보 \n"," 도대체 야 이 도둑넘 들 아 이것 들 이 후시 녹음 을 하 었 나 배우 들 만 구경 하 다 나오 었 네요 솔직히 재미없 던 거 사실 기대 \n","남기 는 듯 넘 쓰레기 가 타 점 이 없 어서 점주 ᆫ 다 죽이 는 배우 들 로 만드 ᆫ 죽이 고 싶 은 영화 이 다 돈 아깝 어서 욕 나오\n","었 다 사랑 스럽 ᆫ 남친 을 생각 하 어서 점 은 주 ᆫ다 좋 은 배우 들 데리 고 쓰레기 영화 좀 만들 지 말 어 완전 지루 하 던데 뭐\n","ᆫ 거 이 라 짜증 내 면서 보 었 는데 연기력 이 대박 이 였 음 배우 들 연기력 이 진짜 깊이 빠지 어서 시간 가 는 줄 모르 고 봄 김\n"," 구나 이 라고 생각 하 ᆯ 수 있 다 뭐 이 ᆫ가 매력 이 있 고 배우 들 도 좋 었 는데 스토리 는 별로 이것 이 뜨 ᆫ 이유 는 말 그\n"," 이 안타깝 다 짝퉁 필 이 다분 하 었 지만 그렇 어도 액션 이나 배우 들 연기력 에 보 ᆯ 만 하 었 음 뭐 이 ᆫ가 아쉽 고 뭐 이 ᆫ\n"," 재밌 엇 고 묘하 ᆫ 매력 이 있 었 다 스토리 는 별로 이 ᆫ데 배우 들 은 좋 음 솔직히 그냥 그렇 었 다 액션 감동 사랑 을 다 표현\n"," 취향 의 문제 이 ᆯ 수 도 천만 이 넘 었 다죠 김윤석 이 라는 배우 를 보 기 위하 어서 보 었 던 영화 이 ᆫ데 아쉽 은 점 이 좀 \n","더 보 ᆯ 거 ᆯ 그렇 었 다 너무 과대평가 되 어 지 었 음 출연 배우 가 엄청 많 은데 도 스토리 가 산만하 어 지 지 않 게 구성 은 \n","기 가 강하 ᆷ 뭐 끝 도 걍 그저 그렇 어서 기억 도 안 남 어요 배우 들 은 좋 었 는데 기대 를 많이 하 어서 그렇 ᆫ지 오션스 를 생\n","없 는 느낌 그리고 스토리 상 비중 있 다고 판단 되 는 다른 주연 배우 들 의 비중 이 작 게 표현 되 ᆫ 느낌 재미없 고 이러 지 ᆫ 않\n"," 않 었 는데 이것 이 진짜 왜 천만 이 ᆫ지 모르 겠 다 주연 급 배우 들 뒤 에 걍 뻔 하 ᆫ 스토리 정말 멋지 ᆫ 영화 이것 이 왜 천\n"," 스토리 정말 멋지 ᆫ 영화 이것 이 왜 천만 영화 이 ᆫ지 그나마 배우 들 의 연기 가 살리 었 다 그냥 배우 들 이 아깝 음 배우 들 연\n"," 천만 영화 이 ᆫ지 그나마 배우 들 의 연기 가 살리 었 다 그냥 배우 들 이 아깝 음 배우 들 연기력 도 최고 스토리 의 재미 와 반전 \n"]}],"source":["text.concordance(\"배우\")"],"id":"grpOuAk8PC2x"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":317,"status":"ok","timestamp":1683694860200,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"x6IYQ-mCPC9j","outputId":"74f873bd-2011-46ba-80e9-d72e7cb5e0e8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Displaying 25 of 40 matches:\n","하 ᆫ 욕심 이 들어가 ᆫ 영화 전체 적 으로 재미있 었 다 최동훈 감독 님 대단하 다 정말 재미없 는 데 왜 인기 가 있 는지 모르 겠 다\n"," 재미있 게 잘 보 었 어요 두 번 보 었 어요 재밋게밧어욤 최동훈 감독 영화 중 최악 이 었 다 전형 적 이 ᆫ 상업 적 이 ᆫ 영화 이 \n"," 일레븐 을 떨치 어 버리 ᆯ 수 가 없 었 음 의외로 잼 던데 최 감독 특유 의 반전 에 반전 잘 보 엇 음 전지현 왜케이쁘냐 김수현 대 \n","씬 낫 다 크 ᆫ 스케일 에 세밀 하 ᆫ 처리 까지 완벽 하 었 다 감독 때문 에 보 었 고 한국판 오션 느낌 에 초반 에 는 빠르 ᆫ 전개\n","재미 이 랄까 기대 하 었 던 것 보다 ᆫ 별로 이 었 다는 최동훈 감독 전작 보다 는 조금 하 지만 길 ᆫ 런닝 타임 이 지루 하 지 않 \n","시원 하 고 즐겁 은 영화 가볍 게 보 기 에 ᆫ 재밌 는 영화 최 감독 은 늘 다음 작품 을 기대 하 게 만들 는 감독 중 하나 이 ᆫ데 \n"," 재밌 는 영화 최 감독 은 늘 다음 작품 을 기대 하 게 만들 는 감독 중 하나 이 ᆫ데 이번 에 는 나 를 실망 시키 었 다 자신 의 장\n","ᆫ 관객 을 동원 하 ᆫ 영화 에 는 다 이유 가 있 었 어요 타짜 감독 이 만들 어서 기대 하 고 보 었 는데 오랜만 에 시간 가 는 줄 \n","전지현 의 재 발견 마케팅 의 승리 그냥 킬링 타임 용 영화 최동훈 감독 의 커리어 에 오점 이 되 ᆯ 영화 점 가까이 는 되 ᆯ 영화 이 \n","에 보 ᆯ 수 있 다는 이유 만 으로 도 점 이상 은 줘야죠 최동훈 감독 의 범죄 재 구성 타짜 만큼 의 쪼 는 맛 은 없 지만 수습 은 잘\n"," 도 미치 지 못 하 었 다 그래도 범죄 액션 의 선두 주자 최동훈 감독 을 지지 하 ᆫ다 그리고 디아이 의 그녀 를 보 게 되 어 더욱 즐\n"," 공감 하 네요 물론 재미없 다 수준 까지 는 아니 였 지만 최동훈 감독 전 작품 들 생각 하 면 아쉬움 이 크 ᆫ 영화 이 ᆸ니다 화려 하\n","ᆫ 스토리 에 시시하 ᆫ 반전 오로지 배우 발 로 흥행 하 ᆫ 영화 감독 때문 에 잘 짜이 어 지 ᆫ 영화 한 편 을 기대 하 었 는데 시기\n"," 기 에 좋 은 영화 전지현 의 연기 가 좀 괜찮 어 지 었 다 이 감독 이 진정 범죄 의 재 구성 과 타짜 를 만드 ᆫ 감독 이 맞 나 싶\n","지 었 다 이 감독 이 진정 범죄 의 재 구성 과 타짜 를 만드 ᆫ 감독 이 맞 나 싶 었 다 줄거리 는 단순 하 었 으나 연출력 하나 는 \n","나 싶 음 센스 가득 하 ᆫ 장면 들 을 만들 어 내 ᆯ 줄 알 는 감독 이 한국 에 있 다는 것 이 신 나 ᆫ다 가끔 엉성 하 ᆫ 전개 가\n"," 놀이기구 를 타 고 있 는 기분 이 었 다 혼신 의 힘 들 다 한 감독 에게 감사 드리 ᆫ다 여러 배우 들 이 멋드러지 하 게 어울리 ᆯ \n"," 출연진 이 눈 을 즐겁 게 하 지만 이외 로 그 때문 에 아쉽 게 감독 만 의 특유 의 연출 과 시나리오 의 한계 성 을 드러내 ᆫ 것 같\n","보 었 습니다만 작품 성 은 없 네요 전지현 몸매 를 위하 ᆫ 영화 감독 의 전작 들 에 비하 어 재미없 고 허술하 ᆷ 재밌 지만 허술하 다\n"," 어라 한국 영화 개창 피 당 하 ᆫ다 한국 의 개허세 얍실 하 ᆫ 감독 들 요새 왜 이리 증가 하 고 있 나 강우석 을 모태 로 써니 의 \n","까 망하 ᆯ 재미없 어 장난 하 어 크 게 두 가지 경우 가 있 다 감독 이 신인 배우 에게 국제 영화제 의 레드카펫 을 밟 을 수 있 게 \n"," 을 밟 을 수 있 게 하 어 주 는 경우 우리 나라 에 ᆫ 김기덕 감독 이 그러하 다 아니면 감독 이 배우 들 때문 에 먹 고 살 ᆫ다는 \n","어 주 는 경우 우리 나라 에 ᆫ 김기덕 감독 이 그러하 다 아니면 감독 이 배우 들 때문 에 먹 고 살 ᆫ다는 소리 가 나오 는 경우 과연\n"," 구성 은 헐리우드 영화 를 따라가 는 느낌 은 들 었 지만 최동훈 감독 특유 의 연출력 이 영화 를 한국 적 으로 이끌 었 다 김윤식 액션\n"," 이리 조잡 하 ᆷ 배우 들 이름 값 이 그나마 점 만들 어 내 ᆷ 감독 님 진짜 너무 하 시 ᆫ 거 아니 에요 어떻게 저 배우 를 델 ᆯ꼬\n"]}],"source":["text.concordance(\"감독\")"],"id":"x6IYQ-mCPC9j"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":419,"status":"ok","timestamp":1683694863333,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"UcdoPl0JQIdG","outputId":"c91b3e74-63f1-496d-bc21-21dc9188f67f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Displaying 25 of 97 matches:\n","구성 의 발밑 도 쫓아가 ᆯ 생각 이 없 는 듯 하 ᆫ 맥 빠지 는 스토리 정말 재미 잇 어요 나 는 영화관 에서 자 엇 다 보 ᆯ 만 하 었\n","렇 은지 별로 천만 돌파 이 라 기대 하 고 가 었 더만 정말 실망 스토리 도 별로 이 고 도대체 시간 동안 뭐 ᆯ 보 고 오 ᆫ 지 를 모르\n","해외 로케 에 어마어마 하 ᆫ 배우 들 출연 하 ᆫ 것 에 비하 어 스토리 도 없 고 무어 이 ᆫ가 다른 거 ᆯ 기대 하 었 다만 오션스일레븐\n","락 영화 로 무난 배우 들 연기 는 좋 어요 캐스팅 도 좋 고 근데 스토리 가 더 짱짱 하 엇 음 더 좋 었 을 터 이 ᆫ데 아쉽 다 이것 이\n","ᆯ 만하 ᆫ 영화 이 었 음 간만에 괜찮 었 는데 약간 의 아쉽 은 스토리 어디 서 재미 를 느끼 어야 하 나 이것저것 짜 어 맞추 기 한 영\n"," 정도 그림 이 나오 ᆫ다니 우리나라 는 보통 이 정도 그림 이 면 스토리 가 개판 이 ᆫ 경우 가 많 은데 이 영화 는 괜찮 다 재미있 다 \n"," 때문 에 보 었 다 능 오션스 일레븐 에 비하 어 전반부 훔치 는 스토리 가 좀 허술 하 ᆫ 듯 하 나 후반부 의 전개 를 위하 ᆫ 시간 안\n","보 ᆯ 만 하 어요 일단 유명 스타 가 넘 많 어서 눈 이 즐겁 고 스토리 재미 구성 등 등 도 나쁘 지 않 어요 보 ᆯ 거리 많 네요 왜 평\n","었 지만 무지 재미있 게 보 ᆫ 영화 좀 지루 하 ᆫ 감 도 잇 고 스토리 가 너무 빨리 빨리 전개 되 고 반전 이 너무 난잡 하 어 영화 가\n","애 내 마케팅 으로 돈 많이 벌 엇 네 진짜 재미 는 있 으나 억지 스토리 가 아쉽 은 영화 말 이 안 되 는 이야기 이 ᆷ 점 대 가 아니 \n","미 도 있 었 다 평점 이 높 은 듯 감동 과 의미 를 모르 겠 고 스토리 의 동기 가 없 음 후반 액션 장면 분 만 보 ᆯ 만 하 었 음 천\n","만 보 ᆯ 만 하 었 음 천만 이해 가 좀 안 가 ᆷ 재밌 는 영화 스토리 좋 은 영화 사회 적 이슈 를 담 어서 따지 고 생각 하 ᆫ 느 것\n"," 뭐 이 ᆫ가 부족 하 다 오락 성 은 충분하 다 임달화 굿 솔직히 스토리 는 그저 그럼 재밌 다는 사람 들 뭐 이 냐 진짜 재미없 어 돈 아\n","ᆯ 수 있 다 뭐 이 ᆫ가 매력 이 있 고 배우 들 도 좋 었 는데 스토리 는 별로 이것 이 뜨 ᆫ 이유 는 말 그대로 초 호화 캐스팅 덕분 \n"," 생각 하 ᆸ니다 뭐 이 ᆫ가 이 도 아니 고 저 도 아니 ᆫ 그런 스토리 너무 기대 하 어서 그렇 은지 그런 저런 액션 스토리 도 왜 이렇 \n","아니 ᆫ 그런 스토리 너무 기대 하 어서 그렇 은지 그런 저런 액션 스토리 도 왜 이렇 게 눈 에 보이 는지 그리고 존재감 없 는 김수현 이 \n","하 ᆫ 영화 이 다 하지만 재밌 엇 고 묘하 ᆫ 매력 이 있 었 다 스토리 는 별로 이 ᆫ데 배우 들 은 좋 음 솔직히 그냥 그렇 었 다 액션\n","다 너무 과대평가 되 어 지 었 음 출연 배우 가 엄청 많 은데 도 스토리 가 산만하 어 지 지 않 게 구성 은 잘 하 ᆫ 것 같 지만 뭐 이\n","아니 ᆫ데 헐리우드 급 오락물 수준 배급 력 에 힘 전작 타짜 보다 스토리 나 전체 적 이 ᆫ 짜임새 가 많이 부족 하 다 근데 이 영화 가 \n"," 끊 는 느낌 기대 하 었 던 것 보다 조금 재미없 는 느낌 그리고 스토리 상 비중 있 다고 판단 되 는 다른 주연 배우 들 의 비중 이 작 \n"," 천만 이 ᆫ지 모르 겠 다 주연 급 배우 들 뒤 에 걍 뻔 하 ᆫ 스토리 정말 멋지 ᆫ 영화 이것 이 왜 천만 영화 이 ᆫ지 그나마 배우 들\n","가 살리 었 다 그냥 배우 들 이 아깝 음 배우 들 연기력 도 최고 스토리 의 재미 와 반전 그리고 여운 부족 하 ᆷ 이 없 지 않 어 있 었\n","도 굿 정말 재밌 네요 반전 도 있 고 캐릭터 성 연기력 액션 연출 스토리 캐릭터 와 배우 의 조합 은 매우 적절 하 었 고 잘 어울리 었 음\n","빠방 하 고 차량 액션 은 싸구려 차 들 다이너스티 나 구형 아반떼 스토리 는 오션스 시리즈 미션 임파서블 스토리 구리 ᆷ 정말 재밌 게 보 \n"," 다이너스티 나 구형 아반떼 스토리 는 오션스 시리즈 미션 임파서블 스토리 구리 ᆷ 정말 재밌 게 보 었 네요 액션 이 특히 마음 에 들 어요\n"]}],"source":["text.concordance(\"스토리\")"],"id":"UcdoPl0JQIdG"},{"cell_type":"markdown","metadata":{"id":"SJfo0uQeV2wb"},"source":["# 10.문서 내에서 단어가 사용된 위치 확인하기"],"id":"SJfo0uQeV2wb"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":675},"executionInfo":{"elapsed":1147,"status":"ok","timestamp":1683694868363,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"ZlAxdCfzV9Rg","outputId":"e8e8d141-2653-40e0-ff6a-4fc356fccdbe"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 780x720 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["text.dispersion_plot([\"전지현\", \"김수현\", \"이정재\", \"김혜수\", \"김윤석\", \"최동훈\", \"배우\", \"감독\", \"스토리\"])\n","# "],"id":"ZlAxdCfzV9Rg"},{"cell_type":"markdown","metadata":{"id":"ZNbXximlU_oA"},"source":["# 11.주어진 단어와 유사한 단어 확인"],"id":"ZNbXximlU_oA"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":434,"status":"ok","timestamp":1683632783977,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"-K3O-3JYVIQc","outputId":"3fedffab-d555-413a-ddfd-222dc5662435"},"outputs":[{"name":"stdout","output_type":"stream","text":["이것 액션 평점 생각 나 뭐 반전 김혜수 영화 적 감독 천만 내용 최고 눈 스케일 이 것 거 들\n"]}],"source":["#\n","text.similar(\"전지현\")"],"id":"-K3O-3JYVIQc"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":487,"status":"ok","timestamp":1683632839776,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"zA9tq6ZPVkHd","outputId":"8f3c7dd9-db41-444d-aba5-b2f1e6df4a66"},"outputs":[{"name":"stdout","output_type":"stream","text":["영화 천만 평점 것 점 이것 처음 별로 감독 스토리 재미 내용 최고 사람 장면 별루 생각 도 뭐 거\n"]}],"source":["text.similar(\"김수현\")"],"id":"zA9tq6ZPVkHd"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1683632819942,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"pa8kbSuDVZ4s","outputId":"4b163613-d7f6-434b-97a2-9ab032446f19"},"outputs":[{"name":"stdout","output_type":"stream","text":["캐릭터 영화 다 도둑 사람 나 안 연기자 스토리 남 대사 장면 것 뭐 감독 재미 관객 애 그냥 이제야\n"]}],"source":["text.similar(\"배우\")"],"id":"pa8kbSuDVZ4s"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1683633079081,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"VdHLm4OKWcib","outputId":"c5349a89-face-41f1-c682-bfb566ed2efe"},"outputs":[{"name":"stdout","output_type":"stream","text":["영화 것 뭐 이것 별로 전지현 사람 장면 평점 생각 거 야 배우 액션 작품 김수현 천만 느낌 정도 내용\n"]}],"source":["text.similar(\"감독\")"],"id":"VdHLm4OKWcib"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":394,"status":"ok","timestamp":1683633081648,"user":{"displayName":"Seongmin Mun","userId":"17295717412647902050"},"user_tz":-540},"id":"6kcITCfFWdC7","outputId":"720da3bd-4fe0-4a14-95cf-72900162938d"},"outputs":[{"name":"stdout","output_type":"stream","text":["영화 나 재미 시나리오 보 재밌 연기 내용 전개 캐릭터 긴장감 것 뭐 배우 반전 캐스팅 저 감동 면 기대\n"]}],"source":["text.similar(\"스토리\")"],"id":"6kcITCfFWdC7"}],"metadata":{"colab":{"provenance":[{"file_id":"1E6dk8AgUICws6LyKV_c0SHpkUZ463wsa","timestamp":1684415526090}]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.7"}},"nbformat":4,"nbformat_minor":5}